// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMINISTRATOR
}

model User {
  id        String              @id @default(cuid())
  username  String              @db.VarChar(100)
  email     String              @db.VarChar(100)
  password  String
  avatar    String?
  role      Role                @default(USER)
  game      Game[]
  bookmarks BoorkmarksOnUsers[]
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
  deletedAt DateTime?
}

model Game {
  id           String              @id @default(cuid())
  slug         String              @db.VarChar(100)
  title        String              @db.VarChar(100)
  content      String              @db.Text
  imageUrl     String
  releaseDate  DateTime?
  userId       String
  user         User?               @relation(fields: [userId], references: [id])
  genreId      Int?
  genre        Genre?              @relation(fields: [genreId], references: [id])
  bookmarkedBy BoorkmarksOnUsers[]
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
  deletedAt    DateTime?
}

model Genre {
  id        Int       @id @default(autoincrement())
  slug      String    @db.VarChar(100)
  name      String    @db.VarChar(100)
  game      Game[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model BoorkmarksOnUsers {
  id     Int     @id @default(autoincrement())
  game   Game?   @relation(fields: [gameId], references: [id])
  user   User?   @relation(fields: [userId], references: [id])
  gameId String?
  userId String?

  @@index([gameId, userId])
}
